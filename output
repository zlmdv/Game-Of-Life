==8628== Memcheck, a memory error detector
==8628== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8628== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==8628== Command: ./GOL
==8628== 
==8628== error calling PR_SET_PTRACER, vgdb might block
[H[2J[3J==8628== Invalid read of size 1
==8628==    at 0x10953C: drawBoard (GOL.c:76)
==8628==    by 0x1095D0: main (GOL.c:93)
==8628==  Address 0x1 is not stack'd, malloc'd or (recently) free'd
==8628== 
==8628== 
==8628== Process terminating with default action of signal 11 (SIGSEGV)
==8628==  Access not within mapped region at address 0x1
==8628==    at 0x10953C: drawBoard (GOL.c:76)
==8628==    by 0x1095D0: main (GOL.c:93)
==8628==  If you believe this happened as a result of a stack
==8628==  overflow in your program's main thread (unlikely but
==8628==  possible), you can try to increase the size of the
==8628==  main thread stack using the --main-stacksize= flag.
==8628==  The main thread stack size used in this run was 8388608.
==8628== 
==8628== HEAP SUMMARY:
==8628==     in use at exit: 0 bytes in 0 blocks
==8628==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==8628== 
==8628== All heap blocks were freed -- no leaks are possible
==8628== 
==8628== For lists of detected and suppressed errors, rerun with: -s
==8628== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
